plugins {
    id 'com.android.application'
}

def libraries = rootProject.ext.dependencies

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.appID.app
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))

        // 在gradle文件中配置选项参数值(用于APT传参接受)
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "debug", "\"${url.debug}\"")
        }
        release {
            buildConfigField("String", "release", "\"${url.release}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    libraries.each { k, v -> implementation v }
    // 公共基础库
    implementation project(":lib_common")
    //  prouter 专用 注解模块
    implementation project(":prouter-annotations")
    // prouter 专用 注解处理器
    annotationProcessor project(":prouter-compiler")
    if (isRelease) {
        implementation project(":lib_order")
        implementation project(":lib_account")
    }
}